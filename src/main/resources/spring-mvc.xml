<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">
     <!-- 使用注解，所以需要进行注解扫描
     	springmvc的配置，只扫描控制器的注解
     	springmvc 相当于子容器
     	如果扫描的是父包，不仅设置扫描控制器注解，还需要设置use-default-filters="false"
      -->

    <!-- 引入转换器 -->
    <mvc:annotation-driven conversion-service="convertorService"></mvc:annotation-driven>

    <!-- 设置自定义的转换器 -->
    <bean id="convertorService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <list>
                <!-- 设置多个转换器 -->
                <bean class="com.qianfeng.converter.DateConvert"></bean>
            </list>
        </property>
    </bean>


    <context:component-scan base-package="com.qianfeng" use-default-filters="false">
		<!-- 扫描指定的注解 -->
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
    
    
    <!-- 引入验证器 -->
    <mvc:annotation-driven>
    	<!-- 处理json里的日期数据，默认日期被fastjson转为时间戳数据 -->
  		<mvc:message-converters>  
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">  
                <property name="objectMapper">  
                    <bean class="com.fasterxml.jackson.databind.ObjectMapper">  
                        <property name="dateFormat">  
                            <bean class="java.text.SimpleDateFormat">  
                                <constructor-arg type="java.lang.String" value="yyyy-MM-dd" />
                            </bean>  
                        </property>  
                    </bean>  
                </property>  
            </bean>  
        </mvc:message-converters>
    </mvc:annotation-driven>
    
    <!-- 将静态资源 交给tomcat默认的servlet进行处理 -->
    <mvc:default-servlet-handler/>
    <!--<mvc:resources mapping="/js/**" location="/js/"></mvc:resources>-->
    
    
    <!-- 1 如果针对控制器中的方法的形参，可以直接使用相关验证的注解，需要增加该配置 -->
    <bean class="org.springframework.validation.beanvalidation.MethodValidationPostProcessor"/>
    
     <!-- 视图解析器 -->
   <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
   		<!-- 前缀 -->
   		<property name="prefix" value="/"></property>
   		<!-- 后缀 -->
   		<property name="suffix" value=".html"></property>
   
   </bean>

    <!-- shiro -->
    <!-- 保证实现了Shiro内部lifecycle函数的bean执行 -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <!-- 生成代理，通过代理进行控制 -->
    <bean class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" depends-on="lifecycleBeanPostProcessor"/>
    <!-- 开启Shiro注解,必须放在springmvc的配置文件中 -->
    <bean class="org.apache.shiro.spring.security.interceptor.AuthorizationAttributeSourceAdvisor">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- 注解方式下的异常处理，身份认证异常处理、权限认证异常处理 -->
    <bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
        <property name="exceptionMappings">
            <props>
                <!--登录异常，跳转到login.jsp-->
                <!--<prop key="org.apache.shiro.authz.UnauthenticatedException">
                    login
                </prop>-->
                <!-- 授权异常，跳转到unauthorized.jsp -->
                <!--<prop key="org.apache.shiro.authz.UnauthorizedException">unauthorized1</prop>-->
            </props>
        </property>
    </bean>

    <!-- 文件上传的解析器  id的值不能改-->
    <bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
        <!-- 上传文件的最大大小 ，单位字节 ，比如 1024 * 1024 = 1M-->
        <property name="maxUploadSize" value="1048576"></property>

    </bean>

</beans>